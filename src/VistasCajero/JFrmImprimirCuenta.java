/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package VistasCajero;

import Aplicacion.SistemaRestauranteFrames;
import Excepciones.IndiceArrayListException;
import Modelos.Cajero;
import Vistas.JFrmMenuCajero;

/**
 *
 * @author Naomi
 */
public class JFrmImprimirCuenta extends javax.swing.JFrame {

    /**
     * Creates new form JFrmImprimirCuenta
     */
    public JFrmImprimirCuenta() {
        initComponents();
        this.setLocationRelativeTo(null);
        imprimirCuentas();
    }

    private void imprimirCuentas() {
        //Como sólo es para visualizar, no necesitamos imprimir TODOS los datos
        for (int w = 0; w < SistemaRestauranteFrames.listapedidos.size(); w++) {
            this.textAreaVisualizarCuentas.append("CUENTA NO. " + w);
            this.textAreaVisualizarCuentas.append("\nNo. de Mesa: " + SistemaRestauranteFrames.listapedidos.get(w).getNumeroMesa());
            //CICLOS PARA CADA ALIMENTO
            for (int h = 0; h < SistemaRestauranteFrames.listapedidos.get(w).getPedido().getPlatillo().size(); h++) {
                this.textAreaVisualizarCuentas.append(SistemaRestauranteFrames.listapedidos.get(w).getPedido().getPlatillo().get(h).toString() + "\n");
            }
            for (int i = 0; i < SistemaRestauranteFrames.listapedidos.get(w).getPedido().getBebida().size(); i++) {
                this.textAreaVisualizarCuentas.append(SistemaRestauranteFrames.listapedidos.get(w).getPedido().getBebida().get(i).toString() + "\n");
            }
            for (int j = 0; j < SistemaRestauranteFrames.listapedidos.get(w).getPedido().getPostre().size(); j++) {
                this.textAreaVisualizarCuentas.append(SistemaRestauranteFrames.listapedidos.get(w).getPedido().getPostre().get(j).toString() + "\n");
            }
            this.textAreaVisualizarCuentas.append("\n");
            this.textAreaVisualizarCuentas.append("____________________________\n");
        }//CICLO FOR PARA IMPRIMIR LAS CUENTAS
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelTitulo = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textAreaVisualizarCuentas = new javax.swing.JTextArea();
        labelSubtitulo = new javax.swing.JLabel();
        labelNoCuenta = new javax.swing.JLabel();
        textNumeroCuenta = new javax.swing.JTextField();
        buttonCancelar = new javax.swing.JButton();
        buttonImprimir = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        labelTitulo.setFont(new java.awt.Font("Segoe UI Emoji", 0, 24)); // NOI18N
        labelTitulo.setText("Imprimiendo Cuenta..");

        textAreaVisualizarCuentas.setColumns(20);
        textAreaVisualizarCuentas.setRows(5);
        jScrollPane1.setViewportView(textAreaVisualizarCuentas);

        labelSubtitulo.setText("Ingrese el número de cuenta que desea imprimir");

        labelNoCuenta.setText("No. Cuenta");

        buttonCancelar.setBackground(new java.awt.Color(204, 0, 0));
        buttonCancelar.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        buttonCancelar.setForeground(new java.awt.Color(255, 255, 255));
        buttonCancelar.setText("Cancelar");
        buttonCancelar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonCancelarMouseClicked(evt);
            }
        });

        buttonImprimir.setBackground(new java.awt.Color(51, 153, 0));
        buttonImprimir.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        buttonImprimir.setForeground(new java.awt.Color(255, 255, 255));
        buttonImprimir.setText("Imprimir");
        buttonImprimir.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonImprimirMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(buttonCancelar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(buttonImprimir)
                .addGap(36, 36, 36))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 314, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(labelTitulo))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(89, 89, 89)
                        .addComponent(labelNoCuenta)
                        .addGap(18, 18, 18)
                        .addComponent(textNumeroCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(labelSubtitulo)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTitulo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelSubtitulo)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelNoCuenta)
                    .addComponent(textNumeroCuenta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCancelar)
                    .addComponent(buttonImprimir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonCancelarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonCancelarMouseClicked
        this.dispose();
        new JFrmMenuCajero().setVisible(true);
    }//GEN-LAST:event_buttonCancelarMouseClicked

    private void buttonImprimirMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonImprimirMouseClicked

        try {
            //SE IMPRIME EN EL MISMO ESPACIO EN EL QUE SE VISUALIZAN LAS CUENTAS
            int nocuenta = Integer.parseInt(this.textNumeroCuenta.getText());
            //Excepción
            if (nocuenta < 0 || nocuenta > SistemaRestauranteFrames.listapedidos.size()) {
                throw new IndiceArrayListException("El número de cuenta ingresado no coincide"
                        + "\ncon el número de cuentas registradas");
            }

            this.textAreaVisualizarCuentas.append("\n\n\t**CUENTA**"
                    + "\n\nFecha: " + SistemaRestauranteFrames.listapedidos.get(nocuenta).getFecha().toString()
                    + "\nNúmero de Mesa: " + SistemaRestauranteFrames.listapedidos.get(nocuenta).getNumeroMesa() + "\n"
                    + "Descripción\t  |Precio"
                    + "\n---------------------------------------\n");
            //Vamos a imprimir los alimentos/bebidas
            for (int a = 0; a < SistemaRestauranteFrames.listapedidos.get(nocuenta).getPedido().getPlatillo().size(); a++) {
                this.textAreaVisualizarCuentas.append(SistemaRestauranteFrames.listapedidos.get(nocuenta).getPedido().getPlatillo().get(a).toString() + "\n");
            }
            for (int b = 0; b < SistemaRestauranteFrames.listapedidos.get(nocuenta).getPedido().getBebida().size(); b++) {
                this.textAreaVisualizarCuentas.append(SistemaRestauranteFrames.listapedidos.get(nocuenta).getPedido().getBebida().get(b).toString() + "\n");
            }
            for (int c = 0; c < SistemaRestauranteFrames.listapedidos.get(nocuenta).getPedido().getPostre().size(); c++) {
                this.textAreaVisualizarCuentas.append(SistemaRestauranteFrames.listapedidos.get(nocuenta).getPedido().getPostre().get(c).toString() + "\n");
            }
            this.textAreaVisualizarCuentas.append("\n*******************");
            this.textAreaVisualizarCuentas.append("\nMétodo de Pago:" + SistemaRestauranteFrames.listapedidos.get(nocuenta).getMetodoDePago());
            this.textAreaVisualizarCuentas.append("\n*******************");
            this.textAreaVisualizarCuentas.append("\nTotal a pagar: $" + SistemaRestauranteFrames.listapedidos.get(nocuenta).calcularTotal());

            //Se llama al método para registrar una venta en el archivo, para esto necesitamos un empleado de tipo "Cajero"
            for (int y = 0; y < SistemaRestauranteFrames.listaempleados.size(); y++) {

                if (SistemaRestauranteFrames.listaempleados.get(y) instanceof Cajero) {
                    Cajero unCajero = (Cajero) SistemaRestauranteFrames.listaempleados.get(y);
                    //Se le pasa al método la cuenta en la posición que ingresó el empleado
                    unCajero.registrarVenta(SistemaRestauranteFrames.listapedidos.get(nocuenta));
                }

            }
        } catch (IndiceArrayListException except1) {
            except1.getMessage();
        }

        //Se limpia el espacio de texto
        this.textNumeroCuenta.setText("");
    }//GEN-LAST:event_buttonImprimirMouseClicked

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFrmImprimirCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFrmImprimirCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFrmImprimirCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFrmImprimirCuenta.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFrmImprimirCuenta().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonCancelar;
    private javax.swing.JButton buttonImprimir;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelNoCuenta;
    private javax.swing.JLabel labelSubtitulo;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JTextArea textAreaVisualizarCuentas;
    private javax.swing.JTextField textNumeroCuenta;
    // End of variables declaration//GEN-END:variables
}
